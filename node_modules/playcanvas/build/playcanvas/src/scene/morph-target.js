import { BoundingBox } from '../core/shape/bounding-box.js';

class MorphTarget {
	constructor(options) {
		this.used = false;
		this.options = options;
		this._name = options.name;
		this._defaultWeight = options.defaultWeight || 0;
		this._aabb = options.aabb;
		this.deltaPositions = options.deltaPositions;
	}
	destroy() {
		var _this$texturePosition, _this$textureNormals;
		(_this$texturePosition = this.texturePositions) == null || _this$texturePosition.destroy();
		this.texturePositions = null;
		(_this$textureNormals = this.textureNormals) == null || _this$textureNormals.destroy();
		this.textureNormals = null;
	}
	get name() {
		return this._name;
	}
	get defaultWeight() {
		return this._defaultWeight;
	}
	get aabb() {
		if (!this._aabb) {
			this._aabb = new BoundingBox();
			if (this.deltaPositions) {
				this._aabb.compute(this.deltaPositions);
			}
		}
		return this._aabb;
	}
	get morphPositions() {
		return !!this.texturePositions;
	}
	get morphNormals() {
		return !!this.textureNormals;
	}
	clone() {
		return new MorphTarget(this.options);
	}
	_postInit() {
		if (!this.options.preserveData) {
			this.options = null;
		}
		this.used = true;
	}
	_setTexture(name, texture) {
		this[name] = texture;
	}
}

export { MorphTarget };
