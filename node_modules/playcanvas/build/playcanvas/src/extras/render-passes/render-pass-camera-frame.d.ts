export const SSAOTYPE_NONE: "none";
export const SSAOTYPE_LIGHTING: "lighting";
export const SSAOTYPE_COMBINE: "combine";
/**
 * Render pass implementation of a common camera frame rendering with integrated  post-processing
 * effects.
 *
 * @category Graphics
 * @ignore
 */
export class RenderPassCameraFrame extends RenderPass {
    constructor(app: any, cameraComponent: any, options?: {});
    app: any;
    prePass: any;
    scenePass: any;
    composePass: any;
    bloomPass: any;
    ssaoPass: any;
    taaPass: any;
    _renderTargetScale: number;
    /**
     * @type {RenderTarget|null}
     * @private
     */
    private rt;
    cameraComponent: any;
    reset(): void;
    sceneTexture: Texture;
    sceneDepth: Texture;
    scenePassTransparent: RenderPassForward;
    colorGrabPass: RenderPassColorGrab;
    afterPass: RenderPassForward;
    sanitizeOptions(options: any): any;
    set renderTargetScale(value: number);
    get renderTargetScale(): number;
    needsReset(options: any): boolean;
    update(options: any): void;
    setupRenderPasses(options: any): void;
    hdrFormat: number;
    sceneOptions: {
        resizeSource: any;
        scaleX: number;
        scaleY: number;
    };
    collectPasses(): any[];
    createPasses(options: any): void;
    setupScenePrepass(options: any): void;
    setupScenePass(options: any): {
        lastAddedIndex: number;
        clearRenderTarget: boolean;
    };
    setupSsaoPass(options: any): void;
    setupBloomPass(options: any, inputTexture: any): void;
    setupTaaPass(options: any): Texture;
    setupComposePass(options: any): void;
    setupAfterPass(options: any, scenePassesInfo: any): void;
}
export class CameraFrameOptions {
    formats: any;
    samples: number;
    sceneColorMap: boolean;
    lastGrabLayerId: number;
    lastGrabLayerIsTransparent: boolean;
    lastSceneLayerId: number;
    lastSceneLayerIsTransparent: boolean;
    taaEnabled: boolean;
    bloomEnabled: boolean;
    ssaoType: string;
    ssaoBlurEnabled: boolean;
    prepassEnabled: boolean;
}
import { RenderPass } from '../../platform/graphics/render-pass.js';
import { Texture } from '../../platform/graphics/texture.js';
import { RenderPassForward } from '../../scene/renderer/render-pass-forward.js';
import { RenderPassColorGrab } from '../../scene/graphics/render-pass-color-grab.js';
